*telescope-lazy-plugins.nvim.txt*For Neovim >= 0.9Last change: 2024 February 23

==============================================================================
Table of Contents              *telescope-lazy-plugins.nvim-table-of-contents*

1. Description                       |telescope-lazy-plugins.nvim-description|
2. Installation                     |telescope-lazy-plugins.nvim-installation|
3. Usage                                   |telescope-lazy-plugins.nvim-usage|
4. Configuration:                 |telescope-lazy-plugins.nvim-configuration:|
  - Full config example:    |telescope-lazy-plugins.nvim-full-config-example:|
  - Full spec table              |telescope-lazy-plugins.nvim-full-spec-table|
5. Contributions                   |telescope-lazy-plugins.nvim-contributions|

==============================================================================
1. Description                       *telescope-lazy-plugins.nvim-description*

A Telescope picker to quickly access plugins config files for lazy.nvim
<https://github.com/folke/lazy.nvim> configurations.

No more head overload trying to remember in which file you changed that plugin
option, or searching through files to check for overlapping configurations.

Specially useful when your plugin configuration is spread across many files,
when you have a lot of plugins in the same file or when you have multiple
plugins grouped into separate files like this:

>
    lua/
    └── some/path
        ├── core.lua
        ├── develop.lua
        ├── extras
        │   └── others.lua
        ├── helpers.lua
        ├── misc.lua
        └── ui.lua
<

The plugin check the current `LazyPluginSpec`, extract each plugin data and
generate the full filepath for each. Also, when opening a config file, the
cursor is set at the appropiate position.


==============================================================================
2. Installation                     *telescope-lazy-plugins.nvim-installation*

- Add it into the Telescope dependencies:

>lua
    return {
      "nvim-telescope.nvim",
      dependencies = {
        { "polirritmico/telescope-lazy-plugins.nvim" },
      },
      -- etc.
    }
<

- Or on its own spec:

>lua
    return {
      "polirritmico/telescope-lazy-plugins.nvim",
      dependencies = { "nvim-telescope.nvim" },
      -- etc.
    }
<


==============================================================================
3. Usage                                   *telescope-lazy-plugins.nvim-usage*

- **Command-line:**

>vimscript
    :Telescope lazy_plugins
<

- **Lua:**

>lua
    require("telescope").extensions.lazy_plugins.lazy_plugins()
<


==============================================================================
4. Configuration:                 *telescope-lazy-plugins.nvim-configuration:*

Add the options in the `telescope.nvim` opts `extensions` table inside
`lazy_plugins`.

  -------------------------------------------------------------------------------------------
  Option            Type      Description
  ----------------- --------- ---------------------------------------------------------------
  name_only         boolean   Match only the repository name. False to match the full
                              account/repo_name.

  show_disabled     boolean   Also show disabled plugins from the Lazy spec.

  lazy_config       string    Path to the lua file containing the lazy setup() call. With
                              this option set, search lazy and open your lazy.lua, init.lua
                              or similar file.

  lazy_spec_table   string    If plugins are directly passed to the require("lazy").setup()
                              function inside a plugins table (instead of using only imports
                              paths), set this option to the file where that table is
                              defined. When no module is found inside a plugin spec this path
                              would be used instead.
  -------------------------------------------------------------------------------------------

FULL CONFIG EXAMPLE:        *telescope-lazy-plugins.nvim-full-config-example:*

>lua
    return {
      "nvim-telescope.nvim",
      cmd = "Telescope",
      dependencies = {
        { "nvim-lua/plenary.nvim" },
        {
          "polirritmico/telescope-lazy-plugins.nvim",
          keys = {
            { "<leader>cp", "<Cmd>Telescope lazy_plugins<CR>", desc = "Telescope: Plugins configurations" },
          },
        },
      },
      opts = {
        extensions = {
          lazy_plugins = {
            -- defaults:
            name_only = true,
            show_disabled = true,
            lazy_config = vim.fn.stdpath("config") .. "/lua/config/lazy.lua",
            lazy_spec_table = vim.fn.stdpath("config") .. "/lua/config/lazy.lua",
          },
        },
        -- etc.
      },
      -- etc.
<


FULL SPEC TABLE                  *telescope-lazy-plugins.nvim-full-spec-table*

When passing the plugin specification table directly to the setup function
(e.g. `require('lazy').setup(spec, opts)`), ensure that the `lazy_spec_table`
option is set to the file where it is defined.

For example:

>lua
    -- .conf/nvim/init.lua
    local opts = {
      -- lazy configuration options
    }
    require("lazy").setup({
      -- full list of plugins and configs
      "username/plugin",
      opts = {
        configurations = "values"
      },
      -- etc.
      {
        "nvim-telescope/telescope.nvim",
        dependencies = {
          { "nvim-lua/plenary.nvim" },
          { "polirritmico/telescope-lazy-plugins.nvim" },
        },
        opts = {
          extensions = {
            lazy_plugins = {
              lazy_spec_table = vim.fn.stdpath("config") .. "/init.lua" -- path to this file
            },
          },
        },
      },
    }, opts)
<


==============================================================================
5. Contributions                   *telescope-lazy-plugins.nvim-contributions*

This plugin is made mainly for my personal use, but suggestions, issues, or
pull requests are very welcome.

Enjoy

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
